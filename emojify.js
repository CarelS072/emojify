//https://www.youtube.com/watch?v=mP0VHJYFOAU

//inspiration: http://clap.space
//helpfull helps: https://www.kirupa.com/html5/emoji.htm
//future addons: Youtube captions making emoji karaoke
//all emojis: https://unicode.org/emoji/charts/full-emoji-list.html#1f354
//Only these work so far using DEC codes https://www.w3schools.com/charsets/ref_utf_misc_symbols.asp



//<p>üçî</p>
//<p>&#x1F354</p>

//emoji can be called by shortcodes in supported programs or codepoints.....
//ex shortcode :hamburger:
//ex codepoint U+1F354


//loop that reads texfield
//loop that translates textfield and update translated field (1 textbox, making emojis as you type? or have 1 clean box)


document.addEventListener('DOMContentLoaded', startEmoji)

var tempStr = "";


//need one array containing dictionary in format [[word, symbol][word, symbol]]
//var emoDictionary = [[ , ] , ["hamburger", "üçî"] , ["watch", "‚åöÔ∏è"] , ["happy", "üòÉ"]];

var emoDictionary = [
"blat",
"alien",
"anger",
"angry",
"anguished",
"anxious",
"astonished",
"baby",
"left",
"right",
"up",
"down",
"beaming",
"beating",
"black",
"blue",
"bomb",
"bone",
"boy",
"brain",
"broken",
"call",
"cat",
"child",
"clapping",
"clown",
"cold",
"collision",
"confounded",
"confused",
"cowboy",
"crossed",
"crying",
"dashing",
"disappointed",
"dizzy",
"downcast",
"drooling",
"ear",
"exploding",
"expressionless",
"eye",
"eyes",
"joy",
"kiss",
"savoring",
"tongue",
"mouth",
"eyebrow",
"silent",
"rolling",
"medical",
"sick",
"bandage",
"vomit",
"monocle",
"surprised",
"fear",
"steam",
"frustrated",
"fearful",
"flexed",
"flushed",
"folded",
"foot",
"frowning",
"ghost",
"girl",
"goblin",
"green",
"grimacing",
"grinning",
"awkward",
"growing",
"hand",
"handshake",
"hear-no-evil",
"heart",
"heavy",
"hole",
"hot",
"hugging",
"hundred",
"hushed",
"index",
"kisses",
"smooch",
"smooching",
"smooches",
"kissing",
"left-facing",
"leg",
"loudly",
"love",
"love-you",
"lying",
"man",
"man:",
"middle",
"money-mouth",
"nail",
"nauseated",
"nerd",
"neutral",
"nose",
"ogre",
"OK",
"grandpa",
"grandma",
"older",
"oncoming",
"open",
"orange",
"palms",
"partying",
"pensive",
"persevering",
"person",
"person:",
"pile",
"pleading",
"pouting",
"purple",
"stop",
"fist",
"raising",
"red",
"relieved",
"revolving",
"argument",
"right-facing",
"robot",
"rofl",
"sad",
"see-no-evil",
"selfie",
"shushing",
"sign",
"skull",
"sleeping",
"sleepy",
"slightly",
"frown",
"smiling",
"angel",
"inlove",
"sunglasses",
"devil",
"smirking",
"sneezing",
"sparkling",
"speak-no-evil",
"speech",
"squinting",
"star-struck",
"sweat",
"thinking",
"thought",
"thumbsup",
"thumbsdown",
"tired",
"tooth",
"two",
"unamused",
"upside-down",
"victory",
"vulcan",
"waving",
"weary",
"winking",
"woman",
"woozy",
"worried",
"writing",
"yellow",
"zany",
"zipper-mouth",
"zzz",
"ambulance",
"amphora",
"ant",
"articulated",
"automobile",
"avocado",
"bottle",
"chick",
"bacon",
"badger",
"bagel",
"baguette",
"bald",
"banana",
"bank",
"barber",
"bat",
"beach",
"bear",
"beer",
"bento",
"bicycle",
"bird",
"birthday",
"blossom",
"blowfish",
"boar",
"popping",
"bouquet",
"bowl",
"bread",
"brick",
"bridge",
"broccoli",
"bug",
"building",
"bullet",
"burrito",
"busstop",
"bus",
"bust",
"busts",
"butterfly",
"cactus",
"camel",
"camping",
"candy",
"canned",
"carousel",
"carrot",
"castle",
"cat",
"cheese",
"cherries",
"cherry",
"chestnut",
"chicken",
"chipmunk",
"chocolate",
"chopsticks",
"church",
"circus",
"evening",
"morning",
"classical",
"clinking",
"celebration",
"cocktail",
"coconut",
"compass",
"convenience",
"cooked",
"cookie",
"cooking",
"moo",
"cow",
"crab",
"cricket",
"crocodile",
"croissant",
"cucumber",
"cup",
"cupcake",
"curly",
"curry",
"custard",
"cut",
"dango",
"deciduous",
"deer",
"delivery",
"department",
"derelict",
"island",
"desert",
"woof",
"dog",
"dolphin",
"doughnut",
"dove",
"dragon",
"duck",
"dumpling",
"eagle",
"ear",
"egg",
"eggplant",
"elephant",
"evergreen",
"ewe",
"factory",
"fallen",
"ferris",
"fire",
"fish",
"foggy",
"footprints",
"plate",
"fork",
"fortune",
"fountain",
"four",
"fox",
"french",
"fried",
"frog",
"front-facing",
"fuel",
"giraffe",
"glass",
"africa",
"america",
"asia",
"globe",
"goat",
"gorilla",
"grapes",
"apple",
"salad",
"hamburger",
"hamster",
"hatching",
"hedgehog",
"herb",
"hibiscus",
"high-speed",
"hippopotamus",
"honey",
"honeybee",
"horse",
"galopping",
"hospital",
"coffee",
"hotdog",
"chili",
"hot",
"hotel",
"house",
"houses",
"icecream",
"Japanese",
"kaaba",
"kangaroo",
"kick",
"kitchen",
"kiwi",
"koala",
"lady",
"leafy",
"lemon",
"leopard",
"light",
"lion",
"lizard",
"llama",
"lobster",
"locomotive",
"lollipop",
"love",
"mango",
"maple",
"meat",
"melon",
"metro",
"microbe",
"milky",
"minibus",
"monkeyface",
"monkey",
"monorail",
"moon",
"mosque",
"mosquito",
"motor",
"motorcycle",
"motorway",
"mount",
"mountain",
"mouse",
"mushroom",
"national",
"night",
"octopus",
"oden",
"oil",
"owl",
"ox",
"palm",
"pancakes",
"panda",
"parrot",
"paw",
"peach",
"peacock",
"peanuts",
"pear",
"penguin",
"pie",
"pig",
"pineapple",
"pizza",
"police",
"poodle",
"popcorn",
"pot",
"potato",
"poultry",
"pretzel",
"rabbit",
"raccoon",
"racing",
"railway",
"ram",
"rat",
"rhinoceros",
"rice ball",
"roasted",
"roller",
"rooster",
"rose",
"rosette",
"sake",
"salt",
"sandwich",
"sauropod",
"school",
"scorpion",
"seedling",
"shallow",
"shamrock",
"shark",
"shaved",
"sheaf",
"shinto",
"shortcake",
"skateboard",
"snail",
"snake",
"snow-capped",
"soft",
"spaghetti",
"speaking",
"spider web",
"spider",
"spiral",
"spoon",
"sport",
"spouting",
"squid",
"stadium",
"station",
"Statue",
"steaming",
"strawberry",
"stuffed",
"sunflower",
"sunrise",
"sunset",
"sushi",
"swan",
"synagogue",
"taco",
"takeout",
"tangerine",
"taxi",
"teacup",
"camping",
"tiger",
"Tokyo",
"tomato",
"tractor",
"train",
"tram car",
"tram",
"T-Rex",
"trolleybus",
"cocktail",
"blue fish",
"tulip",
"tumbler",
"turkey",
"turtle",
"two-hump",
"unicorn",
"volcano",
"water",
"watermelon",
"wedding",
"whale",
"white flower",
"wilted",
"wine",
"wolf",
"world",
"zebra"];

  var emojiDictionary = [
    0, 
    0x1F47D,
    0x1F4A2,
    0x1F620,
    0x1F627,
    0x1F630,
    0x1F632,
    0x1F476,
    0x1F448,
    0x1F449,
    0x1F446,
    0x1F447,
    0x1F601,
    0x1F493,
    0x1F5A4,
    0x1F499,
    0x1F4A3,
    0x1F9B4,
    0x1F466,
    0x1F9E0,
    0x1F494,
    0x1F919,
    0x1F639,
    0x1F9D2,
    0x1F44F,
    0x1F921,
    0x1F976,
    0x1F4A5,
    0x1F616,
    0x1F615,
    0x1F920,
    0x1F91E,
    0x1F622,
    0x1F4A8,
    0x1F61E,
    0x1F635,
    0x1F613,
    0x1F924,
    0x1F442,
    0x1F92F,
    0x1F611,
    0x1F441,
    0x1F440,
    0x1F602,
    0x1F618,
    0x1F60B,
    0x1F61B,
    0x1F92D,
    0x1F928,
    0x1F636,
    0x1F644,
    0x1F637,
    0x1F912,
    0x1F915,
    0x1F92E,
    0x1F9D0,
    0x1F62E,
    0x1F631,
    0x1F624,
    0x1F92C,
    0x1F628,
    0x1F4AA,
    0x1F633,
    0x1F64F,
    0x1F9B6,
    0x1F626,
    0x1F47B,
    0x1F467,
    0x1F47A,
    0x1F49A,
    0x1F62C,
    0x1F600,
    0x1F605,
    0x1F497,
    0x1F590,
    0x1F91D,
    0x1F649,
    0x1F498,
    0x2763,
    0x1F573,
    0x1F975,
    0x1F917,
    0x1F4AF,
    0x1F62F,
    0x261D,
    0x1F48B,
    0x1F617,
    0x1F61A,
    0x1F619,
    0x1F63D,
    0x1F91B,
    0x1F9B5,
    0x1F62D,
    0x1F48C,
    0x1F91F,
    0x1F925,
    0x1F468,
    0x1F9D4,
    0x1F595,
    0x1F911,
    0x1F485,
    0x1F922,
    0x1F913,
    0x1F610,
    0x1F443,
    0x1F479,
    0x1F44C,
    0x1F474,
    0x1F475,
    0x1F9D3,
    0x1F44A,
    0x1F450,
    0x1F9E1,
    0x1F932,
    0x1F973,
    0x1F614,
    0x1F623,
    0x1F9D1,
    0x1F471,
    0x1F4A9,
    0x1F97A,
    0x1F621,
    0x1F49C,
    0x270B,
    0x270A,
    0x1F64C,
    0x2764,
    0x1F60C,
    0x1F49E,
    0x1F5EF,
    0x1F91C,
    0x1F916,
    0x1F923,
    0x1F625,
    0x1F648,
    0x1F933,
    0x1F92B,
    0x1F918,
    0x1F480,
    0x1F634,
    0x1F62A,
    0x1F642,
    0x1F641,
    0x1F60A,
    0x1F607,
    0x1F60D,
    0x1F60E,
    0x1F608,
    0x1F60F,
    0x1F927,
    0x1F496,
    0x1F64A,
    0x1F4AC,
    0x1F61D,
    0x1F929,
    0x1F4A6,
    0x1F914,
    0x1F4AD,
    0x1F44D,
    0x1F44E,
    0x1F62B,
    0x1F9B7,
    0x1F495,
    0x1F612,
    0x1F643,
    0x270C,
    0x1F596,
    0x1F44B,
    0x1F629,
    0x1F609,
    0x1F469,
    0x1F974,
    0x1F61F,
    0x270D,
    0x1F49B,
    0x1F92A,
    0x1F910,
    0x1F4A4,
    0x1F691,
    0x1F3FA,
    0x1F41C,
    0x1F69B,
    0x1F697,
    0x1F951,
    0x1F37C,
    0x1F424,
    0x1F953,
    0x1F9A1,
    0x1F96F,
    0x1F956,
    0x1F9B2,
    0x1F34C,
    0x1F3E6,
    0x1F488,
    0x1F987,
    0x1F3D6,
    0x1F43B,
    0x1F37A,
    0x1F371,
    0x1F6B2,
    0x1F426,
    0x1F382,
    0x1F33C,
    0x1F421,
    0x1F417,
    0x1F37E,
    0x1F490,
    0x1F963,
    0x1F35E,
    0x1F9F1,
    0x1F309,
    0x1F966,
    0x1F41B,
    0x1F3D7,
    0x1F685,
    0x1F32F,
    0x1F68F,
    0x1F68C,
    0x1F464,
    0x1F465,
    0x1F98B,
    0x1F335,
    0x1F42A,
    0x1F3D5,
    0x1F36C,
    0x1F96B,
    0x1F3A0,
    0x1F955,
    0x1F3F0,
    0x1F408,
    0x1F9C0,
    0x1F352,
    0x1F338,
    0x1F330,
    0x1F414,
    0x1F43F,
    0x1F36B,
    0x1F962,
    0x26EA,
    0x1F3AA,
    0x1F306,
    0x1F3D9,
    0x1F3DB,
    0x1F37B,
    0x1F942,
    0x1F378,
    0x1F965,
    0x1F9ED,
    0x1F3EA,
    0x1F35A,
    0x1F36A,
    0x1F373,
    0x1F42E,
    0x1F404,
    0x1F980,
    0x1F997,
    0x1F40A,
    0x1F950,
    0x1F952,
    0x1F964,
    0x1F9C1,
    0x1F9B1,
    0x1F35B,
    0x1F36E,
    0x1F969,
    0x1F361,
    0x1F333,
    0x1F98C,
    0x1F69A,
    0x1F3EC,
    0x1F3DA,
    0x1F3DD,
    0x1F3DC,
    0x1F436,
    0x1F415,
    0x1F42C,
    0x1F369,
    0x1F54A,
    0x1F432,
    0x1F986,
    0x1F95F,
    0x1F985,
    0x1F33D,
    0x1F95A,
    0x1F346,
    0x1F418,
    0x1F332,
    0x1F411,
    0x1F3ED,
    0x1F342,
    0x1F3A1,
    0x1F692,
    0x1F41F,
    0x1F301,
    0x1F463,
    0x1F37D,
    0x1F374,
    0x1F960,
    0x26F2,
    0x1F340,
    0x1F98A,
    0x1F35F,
    0x1F364,
    0x1F438,
    0x1F425,
    0x26FD,
    0x1F992,
    0x1F95B,
    0x1F30D,
    0x1F30E,
    0x1F30F,
    0x1F310,
    0x1F410,
    0x1F98D,
    0x1F347,
    0x1F34F,
    0x1F957,
    0x1F354,
    0x1F439,
    0x1F423,
    0x1F994,
    0x1F33F,
    0x1F33A,
    0x1F684,
    0x1F99B,
    0x1F36F,
    0x1F41D,
    0x1F434,
    0x1F40E,
    0x1F3E5,
    0x2615,
    0x1F32D,
    0x1F336,
    0x2668,
    0x1F3E8,
    0x1F3E1,
    0x1F3D8,
    0x1F368,
    0x1F3E3,
    0x1F54B,
    0x1F998,
    0x1F6F4,
    0x1F52A,
    0x1F95D,
    0x1F428,
    0x1F41E,
    0x1F96C,
    0x1F34B,
    0x1F406,
    0x1F688,
    0x1F981,
    0x1F98E,
    0x1F999,
    0x1F99E,
    0x1F682,
    0x1F36D,
    0x1F3E9,
    0x1F96D,
    0x1F341,
    0x1F356,
    0x1F348,
    0x1F687,
    0x1F9A0,
    0x1F30C,
    0x1F690,
    0x1F435,
    0x1F412,
    0x1F69D,
    0x1F96E,
    0x1F54C,
    0x1F99F,
    0x1F6F5,
    0x1F3CD,
    0x1F6E3,
    0x1F5FB,
    0x26F0,
    0x1F42D,
    0x1F344,
    0x1F3DE,
    0x1F303,
    0x1F419,
    0x1F362,
    0x1F6E2,
    0x1F989,
    0x1F402,
    0x1F334,
    0x1F95E,
    0x1F43C,
    0x1F99C,
    0x1F43E,
    0x1F351,
    0x1F99A,
    0x1F95C,
    0x1F350,
    0x1F427,
    0x1F967,
    0x1F437,
    0x1F34D,
    0x1F355,
    0x1F693,
    0x1F429,
    0x1F37F,
    0x1F372,
    0x1F954,
    0x1F357,
    0x1F968,
    0x1F407,
    0x1F99D,
    0x1F3CE,
    0x1F683,
    0x1F40F,
    0x1F400,
    0x1F98F,
    0x1F359,
    0x1F360,
    0x1F3A2,
    0x1F413,
    0x1F339,
    0x1F3F5,
    0x1F376,
    0x1F9C2,
    0x1F96A,
    0x1F995,
    0x1F3EB,
    0x1F982,
    0x1F331,
    0x1F958,
    0x2618,
    0x1F988,
    0x1F367,
    0x1F33E,
    0x26E9,
    0x1F370,
    0x1F6F9,
    0x1F40C,
    0x1F40D,
    0x1F3D4,
    0x1F366,
    0x1F35D,
    0x1F5E3,
    0x1F578,
    0x1F577,
    0x1F41A,
    0x1F944,
    0x1F699,
    0x1F433,
    0x1F991,
    0x1F3DF,
    0x1F689,
    0x1F5FD,
    0x1F35C,
    0x1F353,
    0x1F959,
    0x1F33B,
    0x1F305,
    0x1F307,
    0x1F363,
    0x1F9A2,
    0x1F54D,
    0x1F32E,
    0x1F961,
    0x1F34A,
    0x1F695,
    0x1F375,
    0x26FA,
    0x1F42F,
    0x1F5FC,
    0x1F345,
    0x1F69C,
    0x1F686,
    0x1F68B,
    0x1F68A,
    0x1F996,
    0x1F68E,
    0x1F379,
    0x1F420,
    0x1F337,
    0x1F943,
    0x1F983,
    0x1F422,
    0x1F42B,
    0x1F984,
    0x1F30B,
    0x1F403,
    0x1F349,
    0x1F492,
    0x1F40B,
    0x1F4AE,
    0x1F940,
    0x1F377,
    0x1F43A,
    0x1F5FA,
    0x1F993]

console.log('copy of emoDictionary'+ emoDictionary)

function startEmoji(){
  //this function needs to do something when movement is being detected
  document.addEventListener("input", grabSource) 

}


function grabSource(){
  //needs to grab the text and pass on to translateSource
  // console.log('anything')
  var source = document.getElementById("sourceField").value;
  
    // console.log(source)
  translateSource(source)
    
}

function translateSource(source){
  //needs to translate the source and pass on to a temp string to pass it to translated source
    console.log('transslate source called')
  tempStr = source;
      console.log(tempStr +" = tempstring ")

    //need 1 array with the words from the source split up

    var translateWords = tempStr.split(' ');
    // console.log(translateWords + ' = after split');

    //added temporary array due to array splice in if statement causing loop to be broken
    var translateDWords = []
    //boolean to determine if a word has been added or not (see MindBlown ln:81)
    var wordAdded = false
    var emojiAdded = false
  
    for (var i = 0; i < translateWords.length; i++) {
      wordAdded = false

      for (var x = 0; x < emoDictionary.length; x++) {
        emojiAdded = false
//      if (translateWords[i]===emoDictionary[x].split(' ')) {
        if (wordAdded == false) {
          //MIND BLOWN !- due to emoDictionary loop to be performing 3 times (it has 3 entries) it triplicate the results, this else statement is pushing all the attempts to the array.
            console.log('NO MATCHES')
            // console.log('NO match for translateWord = '+ translateWords[i])
            // console.log('NO match for emoDict loop = ' + emoDictionary[x][0])
          translateDWords.push(translateWords[i])
            // console.log('NEW translateDWords ' + translateDWords )
          wordAdded = true;
          

          } else if (((translateWords[i].localeCompare(emoDictionary[x], 'en', {sensitivity: 'base'})) == 0) && emojiAdded == false) {
            // console.log('WE HAVE A MATCH')
            // console.log('translateWord = '+ translateWords[i] +'|| emoDict loop = ' + emoDictionary[x] + '|| emoji = '+ emojiDictionary[x])
            z = String.fromCodePoint(emojiDictionary[x])
            translateDWords.splice(i,1,z)
          
          // translateDWords.push(String.fromCodePoint(emojiDictionary[x])) - borked method, causing duplicates 
          // console.log('NEW translateDWords ' + translateDWords )
          emojiAdded = true
          
          } else {
            console.log ('no more WORDS TO ADD')
          }
          
        }


    }

    //need a function that puts the translated string back together EX: emoji emoji original text emoji emoji
        //look into array to string. Have something to add spaces back between the values.
    
    emojiBoard(translateDWords.join(' '))
    //  console.log("tempstring passed")
    //  console.log(translateDWords.join(' '))
  



}

function emojiBoard(translateWords){
  //shows the translated string 
  // console.log('emojiboard called')
  // console.log('emojiboardTranslateWords = '+ translateWords)
  

  result = translateWords
  //  console.log('result is = '+ result)

  document.getElementById("emojiBoard").innerHTML=result;


}




